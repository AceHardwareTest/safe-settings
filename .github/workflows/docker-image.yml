name: Docker Image CI

on:
  push:
    branches: [ "main" ]
jobs:
  build-docker-image:
    #runs-on: [self-hosted, Windows, x64, DEVDEPLOYMENT]
    runs-on: ubuntu-latest    

    steps:
    #- uses: actions/checkout@v3
    - name: DISPLAY LAST COMMIT ID
      run: |            
          echo  ${{ github.sha }}            
    - name: TO DELETE GH WORKSPACE FOLDER     
      run: rm ${{ github.workspace }} -Force -Recurse -Verbose -ErrorAction SilentlyContinue 
    - name: Set up JDK 11                
      uses: actions/setup-java@v1        
      with:
        java-version: 1.11     
      
    - uses: actions/checkout@v2             
      with:     
        fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis           
          
    - name: JFROG CLI SETUP
      uses: jfrog/setup-jfrog-cli@v2.0.0      
      env:
        JF_ARTIFACTORY_1: ${{ secrets.JF_ARTIFACTORY_SECRET_1 }}         
        JFROG_CLI_TRANSITIVE_DOWNLOAD_EXPERIMENTAL: 'true'
    
    #- name: Build the Docker image
      #run: docker build . --file Dockerfile --tag my-image-name:$(date +%s)
      #run: docker build . --file Dockerfile --tag ace-safe-settings-image
           
    - name: Build Docker Image Locally
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ./Dockerfile
        load: true
        tags: ace-safe-settings-image        
    - name: Inspect the Docker Image
      shell: bash
      run: |
        docker image inspect ace-safe-settings-image         
    - name: Run Functional Tests
      id: functionaltest
      shell: bash
      run: |
          docker run --env APP_ID=${{ vars.APP_ID }} --env PRIVATE_KEY=${{ vars.PRIVATE_KEY }} --env WEBHOOK_SECRET=${{ vars.WEBHOOK_SECRET }} -d -p 3000:3000 ace-safe-settings-image
          sleep 10
          #curl http://localhost:80
    - name: Login to Azure Container Registry
      uses: azure/docker-login@v1
      with:
        login-server: safesettingsregistry.azurecr.io
        username: safe-settings-registry
        password: lfuJXF6MYGELS1V8RVVRtEWvYIvq21XDaywfPY0znI+ACRCMzWvY
    #- name: Login into ACR
      #run: docker login -u safe-settings-registry -p lfuJXF6MYGELS1V8RVVRtEWvYIvq21XDaywfPY0znI+ACRCMzWvY safesettingsregistry.azurecr.io      
    - name: Push Docker Image
      if: ${{ success() }}  
      run: |
            docker tag ace-safe-settings-image:latest safesettingsregistry.azurecr.io/ace-safe-settings-image:${{ github.sha }}
            docker push safesettingsregistry.azurecr.io/ace-safe-settings-image:${{ github.sha }}                   
        
            
    #- run: jfrog rt docker-push ace-safe-settings-image --url "http://liss0768:8082/artifactory/ACEHW-DEVCI/${{ github.event.repository.name }}/"
